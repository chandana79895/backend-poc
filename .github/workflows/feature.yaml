name: NodeJS CI/CD

on:
  push:
    branches:
      - main
      - stage
      - dev
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: main
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and Update AWS SAM CLI
        run: |
          curl -L -o aws-sam-cli-linux-x86_64.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
          unzip aws-sam-cli-linux-x86_64.zip -d sam-installation
          sudo ./sam-installation/install --update
          sam --version

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-duration-seconds: 1200
          audience: sts.amazonaws.com

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      # - name: Setup dependencies
      #   run: npm run setup-deps

      # - name: Run Unit Tests
      #   run: NODE_OPTIONS=--max-old-space-size=8192 npm test

      - name: Create .env file from secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          # ENV: {{ secrets.ENV }}
        run: |
          printenv | grep 'AWS' > .env.${{ secrets.ENV }}
          cat .env.${{ secrets.ENV }}

      - name: Read .env file and construct parameter overrides
        id: construct-params
        run: |
          ENV: ${{ secrets.ENV }}
          PARAMS=""
          while IFS= read -r line; do
            IFS='=' read -r key value <<< "$line"
            PARAMS="$PARAMS ParameterKey=$key,ParameterValue=$value"
          done < .env.${{ secrets.ENV }}
          echo "::set-output name=params::$PARAMS"

      - name: Deploy Backend
        if: github.event_name == 'push'
        env:         
          ENV: ${{ secrets.ENV }}
          PARAMS: ${{ steps.construct-params.outputs.params }}
        run: |
          sam validate
          sam build
          sam deploy --parameter-overrides $ENV 
