name: Build and Deploy

on:
  push:
    branches:
      - dev
  workflow_dispatch:
    inputs:
      approve_changeset:
        description: 'Approve CloudFormation Change Set'
        required: true
        type: boolean

jobs:
  unit_test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Unit-test
        run: |
          npm i
          npm run test

  create_change_set:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and Update AWS SAM CLI
        run: |
          curl -L -o aws-sam-cli-linux-x86_64.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
          unzip aws-sam-cli-linux-x86_64.zip -d sam-installation
          sudo ./sam-installation/install --update
          sam --version

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-duration-seconds: 1200
          audience: sts.amazonaws.com

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm run install-deps

      - name: Create .env file from secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          ENV: ${{ secrets.ENV }}
          STAGENAME: ${{ secrets.STAGENAME }}
        run: |
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" > .env.${{ secrets.ENV }}
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> .env.${{ secrets.ENV }}
          echo "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}" >> .env.${{ secrets.ENV }}
          echo "ENV=${ENV}" >> .env.${{ secrets.ENV }}
          echo "STAGENAME=${STAGENAME}" >> .env.${{ secrets.ENV }}
          cat .env.${{ secrets.ENV }}

      - name: Read .env file and construct parameter overrides
        id: construct-params
        run: |
          PARAMS=""
          while IFS= read -r line; do
            IFS='=' read -r key value <<< "$line"
            PARAMS="$PARAMS ParameterKey=$key,ParameterValue=$value"
          done < .env.${{ secrets.ENV }}
          echo "::set-output name=params::$PARAMS"
          echo "PARAMS=$PARAMS" >> $GITHUB_ENV

      - name: Create CloudFormation change set
        run: |
          sam validate
          sam build
          sam deploy --no-execute-changeset --parameter-overrides $PARAMS
        env:
          PARAMS: ${{ steps.construct-params.outputs.params }}

  wait_for_approval:
    runs-on: ubuntu-latest
    needs: create_change_set
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.approve_changeset == 'true'
    steps:
      - name: Manual Approval
        run: |
          echo "Manual approval step. Review the change set and approve it manually."
          while [ "$(aws cloudformation describe-change-set --change-set-name my-change-set --stack-name my-stack --query 'Status' --output text)" != "CREATE_COMPLETE" ]; do
            echo "Waiting for manual approval..."
            sleep 30
          done

  deploy:
    runs-on: ubuntu-latest
    needs: wait_for_approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and Update AWS SAM CLI
        run: |
          curl -L -o aws-sam-cli-linux-x86_64.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
          unzip aws-sam-cli-linux-x86_64.zip -d sam-installation
          sudo ./sam-installation/install --update
          sam --version

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-duration-seconds: 1200
          audience: sts.amazonaws.com

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm run install-deps

      - name: Execute CloudFormation change set
        run: |
          sam deploy --no-confirm-changeset --parameter-overrides $PARAMS
        env:
          PARAMS: ${{ needs.create_change_set.outputs.params }}